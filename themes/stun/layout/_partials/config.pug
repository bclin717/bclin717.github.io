-
  var algolia = 'undefined';
  var env = process.env;
  if (theme.algolia_search.enable) {
    algolia = JSON.stringify({
      appId: env.ALGOLIA_APP_ID || config.algolia.appId || config.algolia.applicationID,
      apiKey: env.ALGOLIA_API_KEY || config.algolia.apiKey,
      indexName: env.ALGOLIA_INDEX_NAME || config.algolia.indexName,
      hits: theme.algolia_search.hits,
      languages: {
        input_placeholder: __('algolia_search.input_placeholder'),
        hits_empty: __('algolia_search.hits_empty'),
        hits_stats: __('algolia_search.hits_stats')
      }
    });
  }

  var fontIcon = 'undefined';
  if (theme.icon) {
    fontIcon = JSON.stringify({
      prompt: {
        success: theme.icon.prompt_success,
        info: theme.icon.prompt_info,
        warning: theme.icon.prompt_warning,
        error: theme.icon.prompt_error
      },
      copyBtn: theme.icon.copy_btn
    });
  }

  var sidebar = 'undefined';
  if (theme.sidebar.enable) {
    sidebar = JSON.stringify({
      offsetTop: theme.sidebar.offsetTop,
      tocMaxDepth: theme.toc.max_depth
    });
  }

  var header = 'undefined';
  if (theme.header.enable) {
    var isScrollDownIcon = theme.header.scroll_down_icon.enable || false;

    header = JSON.stringify({
      enable: theme.header.enable,
      showOnPost: theme.header.show_on.post,
      scrollDownIcon: isScrollDownIcon,
    });
  }

  var post_widget = 'undefined';
  if (theme.post_widget) {
    var end_text = theme.post_widget.end_text.enable || false;

    if (end_text) {
      post_widget = JSON.stringify({
        end_text: end_text,
      });
    }
  }

  var night_mode = 'undefined';
  if (theme.night_mode.enable) {
    night_mode = JSON.stringify({
      enable: theme.night_mode.enable,
    });
  }

  var back2top = 'undefined';
  if (theme.back2top.enable) {
    back2top = JSON.stringify({
      enable: theme.back2top.enable
    });
  }

  var codeStyle = theme.codeblock.style || 'default';
  var highlight = theme.codeblock.highlight || 'light';
  var wordWrap = theme.codeblock.word_wrap || false;
  var codeblock = JSON.stringify({
    style: codeStyle,
    highlight: highlight,
    word_wrap: wordWrap
  });

  var zoom_image = 'undefined';
  if (theme.zoom_image.enable) {
    zoom_image = JSON.stringify(theme.zoom_image);
  }

  var gallery_waterfall = 'undefined';
  if (theme.gallery_waterfall.enable) {
    gallery_waterfall = JSON.stringify(theme.gallery_waterfall);
  }

  var lazyload = 'undefined';
  if (theme.lazyload.enable) {
    lazyload = JSON.stringify(theme.lazyload);
  }

  var pjax_config = 'undefined';
  if (theme.pjax.enable) {
    pjax_config = JSON.stringify({
      scrollTo2screen: theme.pjax.scrollTo2screen
    });
  }

  var external_link = 'undefined';
  if (theme.external_link) {
    var iconEnable = theme.external_link.icon.enable || false;
    var iconName = theme.external_link.icon.name || '';

    if (iconEnable) {
      external_link = JSON.stringify({
        icon: {
          enable: iconEnable,
          name: iconName
        }
      });
    }
  }

  var shortcuts = 'undefined';
  if (theme.shortcuts) {
    var isSwitchPost = theme.shortcuts.switch_post.enable || false;

    if (isSwitchPost) {
      shortcuts = JSON.stringify({
        switch_post: isSwitchPost
      });
    }
  }

  var prompt = JSON.stringify({
    copy_button: __('popover.copy_button'),
    copy_success: __('prompt.copy_success'),
    copy_error: __('prompt.copy_error')
  });

  var sourcePath = JSON.stringify({
    js: theme.js,
    css: theme.css,
    images: theme.images
  });

script.
  var Stun = window.Stun || {};
  var CONFIG = {
    root: '!{ config.root }',
    algolia: !{ algolia },
    fontIcon: !{ fontIcon },
    sidebar: !{ sidebar },
    header: !{ header },
    post_widget: !{ post_widget },
    night_mode: !{ night_mode },
    back2top: !{ back2top },
    codeblock: !{ codeblock },
    reward: !{ theme.reward.enable },
    fancybox: !{ theme.fancybox },
    zoom_image: !{ zoom_image },
    gallery_waterfall: !{ gallery_waterfall },
    lazyload: !{ lazyload },
    pjax: !{ pjax_config },
    external_link: !{ external_link },
    shortcuts: !{ shortcuts },
    prompt: !{ prompt },
    sourcePath: !{ sourcePath },
  };

  window.CONFIG = CONFIG;
